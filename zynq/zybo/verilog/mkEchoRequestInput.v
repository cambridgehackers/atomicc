//
// Generated by Bluespec Compiler, version 2015.09.beta2 (build 34689, 2015-09-07)
//
// timestamp removed
//
// BVI format method schedule info:
// schedule portalIfc_messageSize_size  CF ( portalIfc_messageSize_size,
// 					  portalIfc_requests_0_enq,
// 					  portalIfc_requests_0_notFull,
// 					  portalIfc_requests_1_enq,
// 					  portalIfc_requests_1_notFull,
// 					  portalIfc_requests_2_enq,
// 					  portalIfc_requests_2_notFull,
// 					  portalIfc_intr_status,
// 					  portalIfc_intr_channel,
// 					  pipes_say_PipeOut_first,
// 					  pipes_say_PipeOut_deq,
// 					  pipes_say_PipeOut_notEmpty,
// 					  pipes_say2_PipeOut_first,
// 					  pipes_say2_PipeOut_deq,
// 					  pipes_say2_PipeOut_notEmpty,
// 					  pipes_setLeds_PipeOut_first,
// 					  pipes_setLeds_PipeOut_deq,
// 					  pipes_setLeds_PipeOut_notEmpty );
//
// schedule portalIfc_requests_0_enq  CF ( portalIfc_messageSize_size,
// 					portalIfc_requests_1_enq,
// 					portalIfc_requests_1_notFull,
// 					portalIfc_requests_2_enq,
// 					portalIfc_requests_2_notFull,
// 					portalIfc_intr_status,
// 					portalIfc_intr_channel,
// 					pipes_say_PipeOut_first,
// 					pipes_say2_PipeOut_first,
// 					pipes_say2_PipeOut_deq,
// 					pipes_say2_PipeOut_notEmpty,
// 					pipes_setLeds_PipeOut_first,
// 					pipes_setLeds_PipeOut_deq,
// 					pipes_setLeds_PipeOut_notEmpty );
// schedule portalIfc_requests_0_enq  SB ( pipes_say_PipeOut_deq );
// schedule portalIfc_requests_0_enq  C ( portalIfc_requests_0_enq );
//
// schedule portalIfc_requests_0_notFull  CF ( portalIfc_messageSize_size,
// 					    portalIfc_requests_0_notFull,
// 					    portalIfc_requests_1_enq,
// 					    portalIfc_requests_1_notFull,
// 					    portalIfc_requests_2_enq,
// 					    portalIfc_requests_2_notFull,
// 					    portalIfc_intr_status,
// 					    portalIfc_intr_channel,
// 					    pipes_say_PipeOut_first,
// 					    pipes_say_PipeOut_notEmpty,
// 					    pipes_say2_PipeOut_first,
// 					    pipes_say2_PipeOut_deq,
// 					    pipes_say2_PipeOut_notEmpty,
// 					    pipes_setLeds_PipeOut_first,
// 					    pipes_setLeds_PipeOut_deq,
// 					    pipes_setLeds_PipeOut_notEmpty );
// schedule portalIfc_requests_0_notFull  SB ( portalIfc_requests_0_enq,
// 					    pipes_say_PipeOut_deq );
//
// schedule portalIfc_requests_1_enq  CF ( portalIfc_messageSize_size,
// 					portalIfc_requests_0_enq,
// 					portalIfc_requests_0_notFull,
// 					portalIfc_requests_2_enq,
// 					portalIfc_requests_2_notFull,
// 					portalIfc_intr_status,
// 					portalIfc_intr_channel,
// 					pipes_say_PipeOut_first,
// 					pipes_say_PipeOut_deq,
// 					pipes_say_PipeOut_notEmpty,
// 					pipes_say2_PipeOut_first,
// 					pipes_setLeds_PipeOut_first,
// 					pipes_setLeds_PipeOut_deq,
// 					pipes_setLeds_PipeOut_notEmpty );
// schedule portalIfc_requests_1_enq  SB ( pipes_say2_PipeOut_deq );
// schedule portalIfc_requests_1_enq  C ( portalIfc_requests_1_enq );
//
// schedule portalIfc_requests_1_notFull  CF ( portalIfc_messageSize_size,
// 					    portalIfc_requests_0_enq,
// 					    portalIfc_requests_0_notFull,
// 					    portalIfc_requests_1_notFull,
// 					    portalIfc_requests_2_enq,
// 					    portalIfc_requests_2_notFull,
// 					    portalIfc_intr_status,
// 					    portalIfc_intr_channel,
// 					    pipes_say_PipeOut_first,
// 					    pipes_say_PipeOut_deq,
// 					    pipes_say_PipeOut_notEmpty,
// 					    pipes_say2_PipeOut_first,
// 					    pipes_say2_PipeOut_notEmpty,
// 					    pipes_setLeds_PipeOut_first,
// 					    pipes_setLeds_PipeOut_deq,
// 					    pipes_setLeds_PipeOut_notEmpty );
// schedule portalIfc_requests_1_notFull  SB ( portalIfc_requests_1_enq,
// 					    pipes_say2_PipeOut_deq );
//
// schedule portalIfc_requests_2_enq  CF ( portalIfc_messageSize_size,
// 					portalIfc_requests_0_enq,
// 					portalIfc_requests_0_notFull,
// 					portalIfc_requests_1_enq,
// 					portalIfc_requests_1_notFull,
// 					portalIfc_intr_status,
// 					portalIfc_intr_channel,
// 					pipes_say_PipeOut_first,
// 					pipes_say_PipeOut_deq,
// 					pipes_say_PipeOut_notEmpty,
// 					pipes_say2_PipeOut_first,
// 					pipes_say2_PipeOut_deq,
// 					pipes_say2_PipeOut_notEmpty,
// 					pipes_setLeds_PipeOut_first );
// schedule portalIfc_requests_2_enq  SB ( pipes_setLeds_PipeOut_deq );
// schedule portalIfc_requests_2_enq  C ( portalIfc_requests_2_enq );
//
// schedule portalIfc_requests_2_notFull  CF ( portalIfc_messageSize_size,
// 					    portalIfc_requests_0_enq,
// 					    portalIfc_requests_0_notFull,
// 					    portalIfc_requests_1_enq,
// 					    portalIfc_requests_1_notFull,
// 					    portalIfc_requests_2_notFull,
// 					    portalIfc_intr_status,
// 					    portalIfc_intr_channel,
// 					    pipes_say_PipeOut_first,
// 					    pipes_say_PipeOut_deq,
// 					    pipes_say_PipeOut_notEmpty,
// 					    pipes_say2_PipeOut_first,
// 					    pipes_say2_PipeOut_deq,
// 					    pipes_say2_PipeOut_notEmpty,
// 					    pipes_setLeds_PipeOut_first,
// 					    pipes_setLeds_PipeOut_notEmpty );
// schedule portalIfc_requests_2_notFull  SB ( portalIfc_requests_2_enq,
// 					    pipes_setLeds_PipeOut_deq );
//
// schedule portalIfc_intr_status  CF ( portalIfc_messageSize_size,
// 				     portalIfc_requests_0_enq,
// 				     portalIfc_requests_0_notFull,
// 				     portalIfc_requests_1_enq,
// 				     portalIfc_requests_1_notFull,
// 				     portalIfc_requests_2_enq,
// 				     portalIfc_requests_2_notFull,
// 				     portalIfc_intr_status,
// 				     portalIfc_intr_channel,
// 				     pipes_say_PipeOut_first,
// 				     pipes_say_PipeOut_deq,
// 				     pipes_say_PipeOut_notEmpty,
// 				     pipes_say2_PipeOut_first,
// 				     pipes_say2_PipeOut_deq,
// 				     pipes_say2_PipeOut_notEmpty,
// 				     pipes_setLeds_PipeOut_first,
// 				     pipes_setLeds_PipeOut_deq,
// 				     pipes_setLeds_PipeOut_notEmpty );
//
// schedule portalIfc_intr_channel  CF ( portalIfc_messageSize_size,
// 				      portalIfc_requests_0_enq,
// 				      portalIfc_requests_0_notFull,
// 				      portalIfc_requests_1_enq,
// 				      portalIfc_requests_1_notFull,
// 				      portalIfc_requests_2_enq,
// 				      portalIfc_requests_2_notFull,
// 				      portalIfc_intr_status,
// 				      portalIfc_intr_channel,
// 				      pipes_say_PipeOut_first,
// 				      pipes_say_PipeOut_deq,
// 				      pipes_say_PipeOut_notEmpty,
// 				      pipes_say2_PipeOut_first,
// 				      pipes_say2_PipeOut_deq,
// 				      pipes_say2_PipeOut_notEmpty,
// 				      pipes_setLeds_PipeOut_first,
// 				      pipes_setLeds_PipeOut_deq,
// 				      pipes_setLeds_PipeOut_notEmpty );
//
// schedule pipes_say_PipeOut_first  CF ( portalIfc_messageSize_size,
// 				       portalIfc_requests_0_enq,
// 				       portalIfc_requests_0_notFull,
// 				       portalIfc_requests_1_enq,
// 				       portalIfc_requests_1_notFull,
// 				       portalIfc_requests_2_enq,
// 				       portalIfc_requests_2_notFull,
// 				       portalIfc_intr_status,
// 				       portalIfc_intr_channel,
// 				       pipes_say_PipeOut_first,
// 				       pipes_say_PipeOut_notEmpty,
// 				       pipes_say2_PipeOut_first,
// 				       pipes_say2_PipeOut_deq,
// 				       pipes_say2_PipeOut_notEmpty,
// 				       pipes_setLeds_PipeOut_first,
// 				       pipes_setLeds_PipeOut_deq,
// 				       pipes_setLeds_PipeOut_notEmpty );
// schedule pipes_say_PipeOut_first  SB ( pipes_say_PipeOut_deq );
//
// schedule pipes_say_PipeOut_deq  CF ( portalIfc_messageSize_size,
// 				     portalIfc_requests_1_enq,
// 				     portalIfc_requests_1_notFull,
// 				     portalIfc_requests_2_enq,
// 				     portalIfc_requests_2_notFull,
// 				     portalIfc_intr_status,
// 				     portalIfc_intr_channel,
// 				     pipes_say2_PipeOut_first,
// 				     pipes_say2_PipeOut_deq,
// 				     pipes_say2_PipeOut_notEmpty,
// 				     pipes_setLeds_PipeOut_first,
// 				     pipes_setLeds_PipeOut_deq,
// 				     pipes_setLeds_PipeOut_notEmpty );
// schedule pipes_say_PipeOut_deq  C ( pipes_say_PipeOut_deq );
//
// schedule pipes_say_PipeOut_notEmpty  CF ( portalIfc_messageSize_size,
// 					  portalIfc_requests_0_notFull,
// 					  portalIfc_requests_1_enq,
// 					  portalIfc_requests_1_notFull,
// 					  portalIfc_requests_2_enq,
// 					  portalIfc_requests_2_notFull,
// 					  portalIfc_intr_status,
// 					  portalIfc_intr_channel,
// 					  pipes_say_PipeOut_first,
// 					  pipes_say_PipeOut_notEmpty,
// 					  pipes_say2_PipeOut_first,
// 					  pipes_say2_PipeOut_deq,
// 					  pipes_say2_PipeOut_notEmpty,
// 					  pipes_setLeds_PipeOut_first,
// 					  pipes_setLeds_PipeOut_deq,
// 					  pipes_setLeds_PipeOut_notEmpty );
// schedule pipes_say_PipeOut_notEmpty  SB ( portalIfc_requests_0_enq,
// 					  pipes_say_PipeOut_deq );
//
// schedule pipes_say2_PipeOut_first  CF ( portalIfc_messageSize_size,
// 					portalIfc_requests_0_enq,
// 					portalIfc_requests_0_notFull,
// 					portalIfc_requests_1_enq,
// 					portalIfc_requests_1_notFull,
// 					portalIfc_requests_2_enq,
// 					portalIfc_requests_2_notFull,
// 					portalIfc_intr_status,
// 					portalIfc_intr_channel,
// 					pipes_say_PipeOut_first,
// 					pipes_say_PipeOut_deq,
// 					pipes_say_PipeOut_notEmpty,
// 					pipes_say2_PipeOut_first,
// 					pipes_say2_PipeOut_notEmpty,
// 					pipes_setLeds_PipeOut_first,
// 					pipes_setLeds_PipeOut_deq,
// 					pipes_setLeds_PipeOut_notEmpty );
// schedule pipes_say2_PipeOut_first  SB ( pipes_say2_PipeOut_deq );
//
// schedule pipes_say2_PipeOut_deq  CF ( portalIfc_messageSize_size,
// 				      portalIfc_requests_0_enq,
// 				      portalIfc_requests_0_notFull,
// 				      portalIfc_requests_2_enq,
// 				      portalIfc_requests_2_notFull,
// 				      portalIfc_intr_status,
// 				      portalIfc_intr_channel,
// 				      pipes_say_PipeOut_first,
// 				      pipes_say_PipeOut_deq,
// 				      pipes_say_PipeOut_notEmpty,
// 				      pipes_setLeds_PipeOut_first,
// 				      pipes_setLeds_PipeOut_deq,
// 				      pipes_setLeds_PipeOut_notEmpty );
// schedule pipes_say2_PipeOut_deq  C ( pipes_say2_PipeOut_deq );
//
// schedule pipes_say2_PipeOut_notEmpty  CF ( portalIfc_messageSize_size,
// 					   portalIfc_requests_0_enq,
// 					   portalIfc_requests_0_notFull,
// 					   portalIfc_requests_1_notFull,
// 					   portalIfc_requests_2_enq,
// 					   portalIfc_requests_2_notFull,
// 					   portalIfc_intr_status,
// 					   portalIfc_intr_channel,
// 					   pipes_say_PipeOut_first,
// 					   pipes_say_PipeOut_deq,
// 					   pipes_say_PipeOut_notEmpty,
// 					   pipes_say2_PipeOut_first,
// 					   pipes_say2_PipeOut_notEmpty,
// 					   pipes_setLeds_PipeOut_first,
// 					   pipes_setLeds_PipeOut_deq,
// 					   pipes_setLeds_PipeOut_notEmpty );
// schedule pipes_say2_PipeOut_notEmpty  SB ( portalIfc_requests_1_enq,
// 					   pipes_say2_PipeOut_deq );
//
// schedule pipes_setLeds_PipeOut_first  CF ( portalIfc_messageSize_size,
// 					   portalIfc_requests_0_enq,
// 					   portalIfc_requests_0_notFull,
// 					   portalIfc_requests_1_enq,
// 					   portalIfc_requests_1_notFull,
// 					   portalIfc_requests_2_enq,
// 					   portalIfc_requests_2_notFull,
// 					   portalIfc_intr_status,
// 					   portalIfc_intr_channel,
// 					   pipes_say_PipeOut_first,
// 					   pipes_say_PipeOut_deq,
// 					   pipes_say_PipeOut_notEmpty,
// 					   pipes_say2_PipeOut_first,
// 					   pipes_say2_PipeOut_deq,
// 					   pipes_say2_PipeOut_notEmpty,
// 					   pipes_setLeds_PipeOut_first,
// 					   pipes_setLeds_PipeOut_notEmpty );
// schedule pipes_setLeds_PipeOut_first  SB ( pipes_setLeds_PipeOut_deq );
//
// schedule pipes_setLeds_PipeOut_deq  CF ( portalIfc_messageSize_size,
// 					 portalIfc_requests_0_enq,
// 					 portalIfc_requests_0_notFull,
// 					 portalIfc_requests_1_enq,
// 					 portalIfc_requests_1_notFull,
// 					 portalIfc_intr_status,
// 					 portalIfc_intr_channel,
// 					 pipes_say_PipeOut_first,
// 					 pipes_say_PipeOut_deq,
// 					 pipes_say_PipeOut_notEmpty,
// 					 pipes_say2_PipeOut_first,
// 					 pipes_say2_PipeOut_deq,
// 					 pipes_say2_PipeOut_notEmpty );
// schedule pipes_setLeds_PipeOut_deq  C ( pipes_setLeds_PipeOut_deq );
//
// schedule pipes_setLeds_PipeOut_notEmpty  CF ( portalIfc_messageSize_size,
// 					      portalIfc_requests_0_enq,
// 					      portalIfc_requests_0_notFull,
// 					      portalIfc_requests_1_enq,
// 					      portalIfc_requests_1_notFull,
// 					      portalIfc_requests_2_notFull,
// 					      portalIfc_intr_status,
// 					      portalIfc_intr_channel,
// 					      pipes_say_PipeOut_first,
// 					      pipes_say_PipeOut_deq,
// 					      pipes_say_PipeOut_notEmpty,
// 					      pipes_say2_PipeOut_first,
// 					      pipes_say2_PipeOut_deq,
// 					      pipes_say2_PipeOut_notEmpty,
// 					      pipes_setLeds_PipeOut_first,
// 					      pipes_setLeds_PipeOut_notEmpty );
// schedule pipes_setLeds_PipeOut_notEmpty  SB ( portalIfc_requests_2_enq,
// 					      pipes_setLeds_PipeOut_deq );
//
//
// Ports:
// Name                         I/O  size props
// portalIfc_messageSize_size     O    16
// RDY_portalIfc_messageSize_size  O     1 const
// RDY_portalIfc_requests_0_enq   O     1 reg
// portalIfc_requests_0_notFull   O     1 reg
// RDY_portalIfc_requests_0_notFull  O     1 const
// RDY_portalIfc_requests_1_enq   O     1 reg
// portalIfc_requests_1_notFull   O     1 reg
// RDY_portalIfc_requests_1_notFull  O     1 const
// RDY_portalIfc_requests_2_enq   O     1 reg
// portalIfc_requests_2_notFull   O     1 reg
// RDY_portalIfc_requests_2_notFull  O     1 const
// portalIfc_intr_status          O     1 const
// RDY_portalIfc_intr_status      O     1 const
// portalIfc_intr_channel         O    32 const
// RDY_portalIfc_intr_channel     O     1 const
// pipes_say_PipeOut_first        O    32 reg
// RDY_pipes_say_PipeOut_first    O     1 reg
// RDY_pipes_say_PipeOut_deq      O     1 reg
// pipes_say_PipeOut_notEmpty     O     1 reg
// RDY_pipes_say_PipeOut_notEmpty  O     1 const
// pipes_say2_PipeOut_first       O    32 reg
// RDY_pipes_say2_PipeOut_first   O     1 reg
// RDY_pipes_say2_PipeOut_deq     O     1 reg
// pipes_say2_PipeOut_notEmpty    O     1 reg
// RDY_pipes_say2_PipeOut_notEmpty  O     1 const
// pipes_setLeds_PipeOut_first    O     8 reg
// RDY_pipes_setLeds_PipeOut_first  O     1 reg
// RDY_pipes_setLeds_PipeOut_deq  O     1 reg
// pipes_setLeds_PipeOut_notEmpty  O     1 reg
// RDY_pipes_setLeds_PipeOut_notEmpty  O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// portalIfc_messageSize_size_methodNumber  I    16
// portalIfc_requests_0_enq_v     I    32 reg
// portalIfc_requests_1_enq_v     I    32 reg
// portalIfc_requests_2_enq_v     I    32 reg
// EN_portalIfc_requests_0_enq    I     1
// EN_portalIfc_requests_1_enq    I     1
// EN_portalIfc_requests_2_enq    I     1
// EN_pipes_say_PipeOut_deq       I     1
// EN_pipes_say2_PipeOut_deq      I     1
// EN_pipes_setLeds_PipeOut_deq   I     1
//
// Combinational paths from inputs to outputs:
//   portalIfc_messageSize_size_methodNumber -> portalIfc_messageSize_size
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkEchoRequestInput(CLK,
			  RST_N,

			  portalIfc_messageSize_size_methodNumber,
			  portalIfc_messageSize_size,
			  RDY_portalIfc_messageSize_size,

			  portalIfc_requests_0_enq_v,
			  EN_portalIfc_requests_0_enq,
			  RDY_portalIfc_requests_0_enq,

			  portalIfc_requests_0_notFull,
			  RDY_portalIfc_requests_0_notFull,

			  portalIfc_requests_1_enq_v,
			  EN_portalIfc_requests_1_enq,
			  RDY_portalIfc_requests_1_enq,

			  portalIfc_requests_1_notFull,
			  RDY_portalIfc_requests_1_notFull,

			  portalIfc_requests_2_enq_v,
			  EN_portalIfc_requests_2_enq,
			  RDY_portalIfc_requests_2_enq,

			  portalIfc_requests_2_notFull,
			  RDY_portalIfc_requests_2_notFull,

			  portalIfc_intr_status,
			  RDY_portalIfc_intr_status,

			  portalIfc_intr_channel,
			  RDY_portalIfc_intr_channel,

			  pipes_say_PipeOut_first,
			  RDY_pipes_say_PipeOut_first,

			  EN_pipes_say_PipeOut_deq,
			  RDY_pipes_say_PipeOut_deq,

			  pipes_say_PipeOut_notEmpty,
			  RDY_pipes_say_PipeOut_notEmpty,

			  pipes_say2_PipeOut_first,
			  RDY_pipes_say2_PipeOut_first,

			  EN_pipes_say2_PipeOut_deq,
			  RDY_pipes_say2_PipeOut_deq,

			  pipes_say2_PipeOut_notEmpty,
			  RDY_pipes_say2_PipeOut_notEmpty,

			  pipes_setLeds_PipeOut_first,
			  RDY_pipes_setLeds_PipeOut_first,

			  EN_pipes_setLeds_PipeOut_deq,
			  RDY_pipes_setLeds_PipeOut_deq,

			  pipes_setLeds_PipeOut_notEmpty,
			  RDY_pipes_setLeds_PipeOut_notEmpty);
  input  CLK;
  input  RST_N;

  // value method portalIfc_messageSize_size
  input  [15 : 0] portalIfc_messageSize_size_methodNumber;
  output [15 : 0] portalIfc_messageSize_size;
  output RDY_portalIfc_messageSize_size;

  // action method portalIfc_requests_0_enq
  input  [31 : 0] portalIfc_requests_0_enq_v;
  input  EN_portalIfc_requests_0_enq;
  output RDY_portalIfc_requests_0_enq;

  // value method portalIfc_requests_0_notFull
  output portalIfc_requests_0_notFull;
  output RDY_portalIfc_requests_0_notFull;

  // action method portalIfc_requests_1_enq
  input  [31 : 0] portalIfc_requests_1_enq_v;
  input  EN_portalIfc_requests_1_enq;
  output RDY_portalIfc_requests_1_enq;

  // value method portalIfc_requests_1_notFull
  output portalIfc_requests_1_notFull;
  output RDY_portalIfc_requests_1_notFull;

  // action method portalIfc_requests_2_enq
  input  [31 : 0] portalIfc_requests_2_enq_v;
  input  EN_portalIfc_requests_2_enq;
  output RDY_portalIfc_requests_2_enq;

  // value method portalIfc_requests_2_notFull
  output portalIfc_requests_2_notFull;
  output RDY_portalIfc_requests_2_notFull;

  // value method portalIfc_intr_status
  output portalIfc_intr_status;
  output RDY_portalIfc_intr_status;

  // value method portalIfc_intr_channel
  output [31 : 0] portalIfc_intr_channel;
  output RDY_portalIfc_intr_channel;

  // value method pipes_say_PipeOut_first
  output [31 : 0] pipes_say_PipeOut_first;
  output RDY_pipes_say_PipeOut_first;

  // action method pipes_say_PipeOut_deq
  input  EN_pipes_say_PipeOut_deq;
  output RDY_pipes_say_PipeOut_deq;

  // value method pipes_say_PipeOut_notEmpty
  output pipes_say_PipeOut_notEmpty;
  output RDY_pipes_say_PipeOut_notEmpty;

  // value method pipes_say2_PipeOut_first
  output [31 : 0] pipes_say2_PipeOut_first;
  output RDY_pipes_say2_PipeOut_first;

  // action method pipes_say2_PipeOut_deq
  input  EN_pipes_say2_PipeOut_deq;
  output RDY_pipes_say2_PipeOut_deq;

  // value method pipes_say2_PipeOut_notEmpty
  output pipes_say2_PipeOut_notEmpty;
  output RDY_pipes_say2_PipeOut_notEmpty;

  // value method pipes_setLeds_PipeOut_first
  output [7 : 0] pipes_setLeds_PipeOut_first;
  output RDY_pipes_setLeds_PipeOut_first;

  // action method pipes_setLeds_PipeOut_deq
  input  EN_pipes_setLeds_PipeOut_deq;
  output RDY_pipes_setLeds_PipeOut_deq;

  // value method pipes_setLeds_PipeOut_notEmpty
  output pipes_setLeds_PipeOut_notEmpty;
  output RDY_pipes_setLeds_PipeOut_notEmpty;

  // signals for module outputs
  reg [15 : 0] portalIfc_messageSize_size;
  wire [31 : 0] pipes_say2_PipeOut_first,
		pipes_say_PipeOut_first,
		portalIfc_intr_channel;
  wire [7 : 0] pipes_setLeds_PipeOut_first;
  wire RDY_pipes_say2_PipeOut_deq,
       RDY_pipes_say2_PipeOut_first,
       RDY_pipes_say2_PipeOut_notEmpty,
       RDY_pipes_say_PipeOut_deq,
       RDY_pipes_say_PipeOut_first,
       RDY_pipes_say_PipeOut_notEmpty,
       RDY_pipes_setLeds_PipeOut_deq,
       RDY_pipes_setLeds_PipeOut_first,
       RDY_pipes_setLeds_PipeOut_notEmpty,
       RDY_portalIfc_intr_channel,
       RDY_portalIfc_intr_status,
       RDY_portalIfc_messageSize_size,
       RDY_portalIfc_requests_0_enq,
       RDY_portalIfc_requests_0_notFull,
       RDY_portalIfc_requests_1_enq,
       RDY_portalIfc_requests_1_notFull,
       RDY_portalIfc_requests_2_enq,
       RDY_portalIfc_requests_2_notFull,
       pipes_say2_PipeOut_notEmpty,
       pipes_say_PipeOut_notEmpty,
       pipes_setLeds_PipeOut_notEmpty,
       portalIfc_intr_status,
       portalIfc_requests_0_notFull,
       portalIfc_requests_1_notFull,
       portalIfc_requests_2_notFull;

  // register say2_requestAdapter_fbnbuff
  reg [31 : 0] say2_requestAdapter_fbnbuff;
  wire [31 : 0] say2_requestAdapter_fbnbuff_D_IN;
  wire say2_requestAdapter_fbnbuff_EN;

  // register say_requestAdapter_fbnbuff
  reg [31 : 0] say_requestAdapter_fbnbuff;
  wire [31 : 0] say_requestAdapter_fbnbuff_D_IN;
  wire say_requestAdapter_fbnbuff_EN;

  // register setLeds_requestAdapter_fbnbuff
  reg [31 : 0] setLeds_requestAdapter_fbnbuff;
  wire [31 : 0] setLeds_requestAdapter_fbnbuff_D_IN;
  wire setLeds_requestAdapter_fbnbuff_EN;

  // ports of submodule say2_requestAdapter_fifo
  wire [31 : 0] say2_requestAdapter_fifo_D_IN, say2_requestAdapter_fifo_D_OUT;
  wire say2_requestAdapter_fifo_CLR,
       say2_requestAdapter_fifo_DEQ,
       say2_requestAdapter_fifo_EMPTY_N,
       say2_requestAdapter_fifo_ENQ,
       say2_requestAdapter_fifo_FULL_N;

  // ports of submodule say_requestAdapter_fifo
  wire [31 : 0] say_requestAdapter_fifo_D_IN, say_requestAdapter_fifo_D_OUT;
  wire say_requestAdapter_fifo_CLR,
       say_requestAdapter_fifo_DEQ,
       say_requestAdapter_fifo_EMPTY_N,
       say_requestAdapter_fifo_ENQ,
       say_requestAdapter_fifo_FULL_N;

  // ports of submodule setLeds_requestAdapter_fifo
  wire [7 : 0] setLeds_requestAdapter_fifo_D_IN,
	       setLeds_requestAdapter_fifo_D_OUT;
  wire setLeds_requestAdapter_fifo_CLR,
       setLeds_requestAdapter_fifo_DEQ,
       setLeds_requestAdapter_fifo_EMPTY_N,
       setLeds_requestAdapter_fifo_ENQ,
       setLeds_requestAdapter_fifo_FULL_N;

  // value method portalIfc_messageSize_size
  always@(portalIfc_messageSize_size_methodNumber)
  begin
    case (portalIfc_messageSize_size_methodNumber)
      16'd0, 16'd1: portalIfc_messageSize_size = 16'd32;
      default: portalIfc_messageSize_size = 16'd8;
    endcase
  end
  assign RDY_portalIfc_messageSize_size = 1'd1 ;

  // action method portalIfc_requests_0_enq
  assign RDY_portalIfc_requests_0_enq = say_requestAdapter_fifo_FULL_N ;

  // value method portalIfc_requests_0_notFull
  assign portalIfc_requests_0_notFull = say_requestAdapter_fifo_FULL_N ;
  assign RDY_portalIfc_requests_0_notFull = 1'd1 ;

  // action method portalIfc_requests_1_enq
  assign RDY_portalIfc_requests_1_enq = say2_requestAdapter_fifo_FULL_N ;

  // value method portalIfc_requests_1_notFull
  assign portalIfc_requests_1_notFull = say2_requestAdapter_fifo_FULL_N ;
  assign RDY_portalIfc_requests_1_notFull = 1'd1 ;

  // action method portalIfc_requests_2_enq
  assign RDY_portalIfc_requests_2_enq = setLeds_requestAdapter_fifo_FULL_N ;

  // value method portalIfc_requests_2_notFull
  assign portalIfc_requests_2_notFull = setLeds_requestAdapter_fifo_FULL_N ;
  assign RDY_portalIfc_requests_2_notFull = 1'd1 ;

  // value method portalIfc_intr_status
  assign portalIfc_intr_status = 1'd0 ;
  assign RDY_portalIfc_intr_status = 1'd1 ;

  // value method portalIfc_intr_channel
  assign portalIfc_intr_channel = 32'hFFFFFFFF ;
  assign RDY_portalIfc_intr_channel = 1'd1 ;

  // value method pipes_say_PipeOut_first
  assign pipes_say_PipeOut_first = say_requestAdapter_fifo_D_OUT ;
  assign RDY_pipes_say_PipeOut_first = say_requestAdapter_fifo_EMPTY_N ;

  // action method pipes_say_PipeOut_deq
  assign RDY_pipes_say_PipeOut_deq = say_requestAdapter_fifo_EMPTY_N ;

  // value method pipes_say_PipeOut_notEmpty
  assign pipes_say_PipeOut_notEmpty = say_requestAdapter_fifo_EMPTY_N ;
  assign RDY_pipes_say_PipeOut_notEmpty = 1'd1 ;

  // value method pipes_say2_PipeOut_first
  assign pipes_say2_PipeOut_first = say2_requestAdapter_fifo_D_OUT ;
  assign RDY_pipes_say2_PipeOut_first = say2_requestAdapter_fifo_EMPTY_N ;

  // action method pipes_say2_PipeOut_deq
  assign RDY_pipes_say2_PipeOut_deq = say2_requestAdapter_fifo_EMPTY_N ;

  // value method pipes_say2_PipeOut_notEmpty
  assign pipes_say2_PipeOut_notEmpty = say2_requestAdapter_fifo_EMPTY_N ;
  assign RDY_pipes_say2_PipeOut_notEmpty = 1'd1 ;

  // value method pipes_setLeds_PipeOut_first
  assign pipes_setLeds_PipeOut_first = setLeds_requestAdapter_fifo_D_OUT ;
  assign RDY_pipes_setLeds_PipeOut_first =
	     setLeds_requestAdapter_fifo_EMPTY_N ;

  // action method pipes_setLeds_PipeOut_deq
  assign RDY_pipes_setLeds_PipeOut_deq = setLeds_requestAdapter_fifo_EMPTY_N ;

  // value method pipes_setLeds_PipeOut_notEmpty
  assign pipes_setLeds_PipeOut_notEmpty =
	     setLeds_requestAdapter_fifo_EMPTY_N ;
  assign RDY_pipes_setLeds_PipeOut_notEmpty = 1'd1 ;

  // submodule say2_requestAdapter_fifo
  FIFO1 #(.width(32'd32),
	  .guarded(32'd1)) say2_requestAdapter_fifo(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(say2_requestAdapter_fifo_D_IN),
						    .ENQ(say2_requestAdapter_fifo_ENQ),
						    .DEQ(say2_requestAdapter_fifo_DEQ),
						    .CLR(say2_requestAdapter_fifo_CLR),
						    .D_OUT(say2_requestAdapter_fifo_D_OUT),
						    .FULL_N(say2_requestAdapter_fifo_FULL_N),
						    .EMPTY_N(say2_requestAdapter_fifo_EMPTY_N));

  // submodule say_requestAdapter_fifo
  FIFO1 #(.width(32'd32),
	  .guarded(32'd1)) say_requestAdapter_fifo(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(say_requestAdapter_fifo_D_IN),
						   .ENQ(say_requestAdapter_fifo_ENQ),
						   .DEQ(say_requestAdapter_fifo_DEQ),
						   .CLR(say_requestAdapter_fifo_CLR),
						   .D_OUT(say_requestAdapter_fifo_D_OUT),
						   .FULL_N(say_requestAdapter_fifo_FULL_N),
						   .EMPTY_N(say_requestAdapter_fifo_EMPTY_N));

  // submodule setLeds_requestAdapter_fifo
  FIFO1 #(.width(32'd8),
	  .guarded(32'd1)) setLeds_requestAdapter_fifo(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(setLeds_requestAdapter_fifo_D_IN),
						       .ENQ(setLeds_requestAdapter_fifo_ENQ),
						       .DEQ(setLeds_requestAdapter_fifo_DEQ),
						       .CLR(setLeds_requestAdapter_fifo_CLR),
						       .D_OUT(setLeds_requestAdapter_fifo_D_OUT),
						       .FULL_N(setLeds_requestAdapter_fifo_FULL_N),
						       .EMPTY_N(setLeds_requestAdapter_fifo_EMPTY_N));

  // register say2_requestAdapter_fbnbuff
  assign say2_requestAdapter_fbnbuff_D_IN = portalIfc_requests_1_enq_v ;
  assign say2_requestAdapter_fbnbuff_EN = EN_portalIfc_requests_1_enq ;

  // register say_requestAdapter_fbnbuff
  assign say_requestAdapter_fbnbuff_D_IN = portalIfc_requests_0_enq_v ;
  assign say_requestAdapter_fbnbuff_EN = EN_portalIfc_requests_0_enq ;

  // register setLeds_requestAdapter_fbnbuff
  assign setLeds_requestAdapter_fbnbuff_D_IN = portalIfc_requests_2_enq_v ;
  assign setLeds_requestAdapter_fbnbuff_EN = EN_portalIfc_requests_2_enq ;

  // submodule say2_requestAdapter_fifo
  assign say2_requestAdapter_fifo_D_IN = portalIfc_requests_1_enq_v ;
  assign say2_requestAdapter_fifo_ENQ = EN_portalIfc_requests_1_enq ;
  assign say2_requestAdapter_fifo_DEQ = EN_pipes_say2_PipeOut_deq ;
  assign say2_requestAdapter_fifo_CLR = 1'b0 ;

  // submodule say_requestAdapter_fifo
  assign say_requestAdapter_fifo_D_IN = portalIfc_requests_0_enq_v ;
  assign say_requestAdapter_fifo_ENQ = EN_portalIfc_requests_0_enq ;
  assign say_requestAdapter_fifo_DEQ = EN_pipes_say_PipeOut_deq ;
  assign say_requestAdapter_fifo_CLR = 1'b0 ;

  // submodule setLeds_requestAdapter_fifo
  assign setLeds_requestAdapter_fifo_D_IN = portalIfc_requests_2_enq_v[7:0] ;
  assign setLeds_requestAdapter_fifo_ENQ = EN_portalIfc_requests_2_enq ;
  assign setLeds_requestAdapter_fifo_DEQ = EN_pipes_setLeds_PipeOut_deq ;
  assign setLeds_requestAdapter_fifo_CLR = 1'b0 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        say2_requestAdapter_fbnbuff <= `BSV_ASSIGNMENT_DELAY 32'd0;
	say_requestAdapter_fbnbuff <= `BSV_ASSIGNMENT_DELAY 32'd0;
	setLeds_requestAdapter_fbnbuff <= `BSV_ASSIGNMENT_DELAY 32'd0;
      end
    else
      begin
        if (say2_requestAdapter_fbnbuff_EN)
	  say2_requestAdapter_fbnbuff <= `BSV_ASSIGNMENT_DELAY
	      say2_requestAdapter_fbnbuff_D_IN;
	if (say_requestAdapter_fbnbuff_EN)
	  say_requestAdapter_fbnbuff <= `BSV_ASSIGNMENT_DELAY
	      say_requestAdapter_fbnbuff_D_IN;
	if (setLeds_requestAdapter_fbnbuff_EN)
	  setLeds_requestAdapter_fbnbuff <= `BSV_ASSIGNMENT_DELAY
	      setLeds_requestAdapter_fbnbuff_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    say2_requestAdapter_fbnbuff = 32'hAAAAAAAA;
    say_requestAdapter_fbnbuff = 32'hAAAAAAAA;
    setLeds_requestAdapter_fbnbuff = 32'hAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkEchoRequestInput

