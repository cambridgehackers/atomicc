
VERILOG_PATH = $(DTOP)/verilog $(SIMDIR)/verilog $(DTOP)/generated
VERILATOR_ARGS= -O3 -CFLAGS "-I$(CONNECTALDIR)/cpp -I$(DTOP)/jni -O " -LDFLAGS "-O " \
    -Wno-fatal -exe --profile-cfuncs --output-split 20000 $(VERILOG_PATH:%=-y %) \
    -DDerivedClockPeriod=4 -DMainClockPeriod=4

SIM_CXX_COMMON = $(addprefix $(CONNECTALDIR)/cpp/, sock_utils.c portalPrintf.c)
SIM_OBJECTS = $(addprefix lib/, $(addsuffix .o, $(basename $(notdir $(SIM_CXX_COMMON)))))

build: prepare_dir bin/ubuntu.exe bin/libconnectal-sim.so vlsim

define SIM_CXX_RULE
$1/$(notdir $(basename $3)).o: $3
	$(CXX) -c $2 -o $1/$(notdir $(basename $3)).o $3
endef
SIM_CXXFLAGS= -g -fPIC -I $(CONNECTALDIR)/cpp -I $(CONNECTALDIR) -I$(DTOP)/jni -O
$(foreach src, $(SIM_CXX_COMMON), $(eval $(call SIM_CXX_RULE, lib, $(SIM_CXXFLAGS), $(src))))

run:
	./bin/ubuntu.exe

prepare_dir:
	@mkdir -p bin lib

bin/libconnectal-sim.so: $(SIM_OBJECTS)
	$(CXX) -O -g -shared -fpic $(SIM_CXXFLAGS) -g -o bin/libconnectal-sim.so $(SIM_OBJECTS)

obj_dir/vlsim.mk: bin/libconnectal-sim.so
	rm -fr obj_dir
	verilator -o vlsim --prefix vlsim $(VERILATOR_ARGS) -cc \
	    --top-module mkVsimTop $(DTOP)/verilog/mkVsimTop.v \
	    $(SIMDIR)/cpp/verilatortop.cpp -LDFLAGS -L$(PWD)/bin

obj_dir/vlsim: obj_dir/vlsim.mk
	+$(MAKE) USER_LDLIBS="-lconnectal-sim -lpthread" VM_PARALLEL_BUILDS=1 -C obj_dir -f vlsim.mk
	cp obj_dir/vlsim bin/vlsim

vlsim: obj_dir/vlsim

clean:
	rm -rf obj_dir/ bin/ lib/ SWSOCK[0-9]

CC=$(TOOLCHAIN)gcc
CXX=$(TOOLCHAIN)g++
CFLAGS_COMMON = -O -g -I$(DTOP)/jni -I$(CONNECTALDIR) -I$(CONNECTALDIR)/cpp -D__ATOMICC__
CFLAGS = $(CFLAGS_COMMON)

PORTAL_INFRA := portal.c transportHardware.c transportSocket.c portalPrintf.c poller.cpp sock_utils.c timer.c
SOURCES := $(addprefix $(CONNECTALDIR)/cpp/, $(PORTAL_INFRA)) \
      $(SIMDIR)/cpp/printfHandler.cpp \
      $(addprefix $(DTOP)/, $(GENERATED_CPP) $(PROJECT_CPP))

LDLIBS := -lpthread

bin/ubuntu.exe: $(SOURCES)
	$(CXX) $(CFLAGS) -o bin/ubuntu.exe $(SOURCES) $(LDLIBS)

